---
- name: Setup provider and varables
  set_fact:
    provider: "{{ provider }}"

- name: Get authentication token
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/authn/login"
    method: POST
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    body:
      username: "{{ provider.user }}"
      password: "{{ provider.password }}"
      loginProviderName: "{{ provider.auth_provider | default('tmos') }}"
    body_format: json
  register: authtoken

- name: Set the token fact if authentication succeeded
  set_fact:
    f5_auth_token: "{{ authtoken.json.token.token }}"
  when: authtoken is success

- name: Test authentication
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/echo"
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: status

- name: Get device provisioning type
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/cm/system/provisioning"
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: rprov

- name: Fail if you're running the role against a DCD device
  fail:
    msg: "This role should be run against a CM device, but you appear to be running it against a DCD device"
  when: rprov.json.systemPersonality == 'logging_node'

- name: Check if system is setup
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/system/setup"
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: setupchk

- name: Stop if the system is not setup
  fail:
    msg: "The CM device has not been setup. Please onboard the DCD device first."
  when: setupchk.json.isSystemSetup is not defined or not setupchk.json.isSystemSetup|bool

- name: Show all App Services to add into the Application in BIG-IQ dashboard
  vars:
    app: "{{ item.0.name }}"
    app_service: "{{ item.1.name }}"
  debug:
    msg: "Application Service {{ app_service }} belonging to {{ app }} "
  with_subelements:
    - "{{ apps }}"
    - pin

- name: Run task to move or merge and AS3 app in BIG-IQ dashboard
  include_tasks: "move-merge.yaml"
  vars:
    app: "{{ item.0.name }}"
    app_service: "{{ item.1.name }}"
  with_subelements:
    - "{{ apps }}"
    - pin